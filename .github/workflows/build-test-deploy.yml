name: Build, Test and Draft Release

on:
  push:
    tags-ignore:
      - '**' # do not run on tags
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: yarn
      - run: yarn install
      - run: yarn test:unit
  staging-lite:
    needs: build
    name: Deploy to staging lite
    environment:
      name: staging-lite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and publish
        uses: ./.github/actions/wrangler-publish
        with:
          node-version: '16.x'
          cloudflare-api-token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          cloudflare-account-id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          license: lite
          project: conf-stg-lite

  staging-lite-test:
    needs: staging-lite
    name: Test staging lite
    environment:
      name: staging-lite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip3 install pluploader
      - run: pluploader --base-url https://zenuml-stg.atlassian.net/wiki --user ${{ secrets.ZENUML_STAGE_UPM_USER }} --password ${{ secrets.ZENUML_STAGE_UPM_PASSWORD }} install --cloud --plugin-uri https://conf-stg-lite.pages.dev/descriptor
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'yarn'
      - run: yarn install
      - run: yarn test:e2e
        env:
          CI: true
          IS_LITE: true
          ZENUML_STAGE_USERNAME: ${{ secrets.ZENUML_STAGE_USERNAME }}
          ZENUML_STAGE_PASSWORD: ${{ secrets.ZENUML_STAGE_PASSWORD }}

  staging-full:
    needs: build
    name: Deploy to staging full
    environment:
      name: staging-full
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and publish
        uses: ./.github/actions/wrangler-publish
        with:
          node-version: '16.x'
          cloudflare-api-token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          cloudflare-account-id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          license: full
          project: conf-stg-full

  staging-full-test:
    needs: staging-full
    name: Test staging full
    environment:
      name: staging-full
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip3 install pluploader
      - run: pluploader --base-url https://zenuml-stg.atlassian.net/wiki --user ${{ secrets.ZENUML_STAGE_UPM_USER }} --password ${{ secrets.ZENUML_STAGE_UPM_PASSWORD }} install --cloud --plugin-uri https://conf-stg-full.pages.dev/descriptor
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'yarn'
      - run: yarn install
      - run: yarn test:e2e
        env:
          CI: true
          ZENUML_STAGE_USERNAME: ${{ secrets.ZENUML_STAGE_USERNAME }}
          ZENUML_STAGE_PASSWORD: ${{ secrets.ZENUML_STAGE_PASSWORD }}

  draft-release-lite:
    name: Draft release for the Lite version
    # don't run on pull requests to avoid creating draft releases for pull requests
    # only run on the master branch, to avoid cutting releases from feature branches
    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
    needs: [staging-lite-test]
    runs-on: ubuntu-latest
    steps:
      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          submodules: true   # not used yet, but soon

      - name: Export Properties
        id: properties
        shell: bash
        run: |
          VERSION="$(echo $(date +'%Y.%m.%d%H%M'))"
          echo "::set-output name=version::$VERSION"

      # Create new release draft - which is not publicly visible and requires manual acceptance
      - name: Create Release Draft
        id: createDraft
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: $(echo $(date +'%Y.%m.%d%H%M'))
        with:
          tag_name: v${{ steps.properties.outputs.version }}-lite
          release_name: v${{ steps.properties.outputs.version }}-lite
          body: 'This is a draft release for the Lite version of the plugin.'
          draft: true

  draft-release-full:
    name: Draft release for the Full version
    # don't run on pull requests to avoid creating draft releases for pull requests
    # only run on the master branch, to avoid cutting releases from feature branches
    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
    needs: [staging-full-test]
    runs-on: ubuntu-latest
    steps:
      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          submodules: true   # not used yet, but soon

      - name: Export Properties
        id: properties
        shell: bash
        run: |
          VERSION="$(echo $(date +'%Y.%m.%d%H%M'))"
          echo "::set-output name=version::$VERSION"

      # Create new release draft - which is not publicly visible and requires manual acceptance
      - name: Create Release Draft
        id: createDraft
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: $(echo $(date +'%Y.%m.%d%H%M'))
        with:
          tag_name: v${{ steps.properties.outputs.version }}-full
          release_name: v${{ steps.properties.outputs.version }}-full
          body: 'This is a draft release for the Full version of the plugin.'
          draft: true

